(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22c1cd"],{f29d:function(n,o){n.exports='<h2 id="vue-blog-template">vue-blog-template</h2>\n<blockquote>\n<p>项目原本的初衷是描述我搭建自己学习blog的过程，以及我想通过blog去记录一些自己学习的经历。\n但是前期记录这些文档，真是非常麻烦。最具体的例子就是<strong>如果需要去摘记一些codes我得截图，或者是我得手写标签</strong>\n我觉得这毫无疑问是效率极低的。随着我学习webpack，我意识到有很多好的办法去解决这一问题。使用markdown文件去撰写日志，到最后我发现很多人都能使用。它不再局限于我个人的blog。</p>\n</blockquote>\n<p><strong>所以，vue-blog-template诞生了</strong>🎉🎉🎉</p>\n<h4 id="markdown">markdown</h4>\n<p>用markdown去写html页面这不是很cool的行为吗？这基于markdown-loader + html-loader，再配合highlight.js。\n具体使用可以详见项目介绍</p>\n<h4 id="侧边栏导航组件">侧边栏导航组件</h4>\n<p>通过更新cnav文件夹中的navList.js文件，修改侧边栏内容\n例如</p>\n<pre><code>  {\n    title: &#39;标题&#39;,\n    path: &#39;&#39;,\n    list: [\n      { subtitle: &#39;副标题&#39;, path: &#39;对应url地址&#39; }\n    ]\n  }</code></pre><h4 id="适应小屏幕手机">适应小屏幕手机</h4>\n<p>具体你可以通过使用小屏幕手机来浏览下，当然这个响应式还是有弊端的。\n因为通过了页面第一次加载时的生命周期判断用户的设备型号。所以你如果用chrome开发者模式选用手机浏览，它并未能响应布局。</p>\n'}}]);
//# sourceMappingURL=chunk-2d22c1cd.23ec0dea.js.map